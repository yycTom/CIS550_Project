{"ast":null,"code":"var _jsxFileName = \"/Users/yangyuchen/Desktop/CIS550 Project/CIS550_Project/frontend/client/src/components/COVID19_world_map.js\";\nimport React, { Component } from 'react';\nimport PageNavbar from \"./PageNavbar\";\nimport { MapContainer, GeoJSON, Popup, Marker, TileLayer } from 'react-leaflet';\nimport GeojsonData from './../countries.json';\nimport 'leaflet/dist/leaflet.css';\nexport default class COVID19_world_map extends Component {\n  constructor() {\n    super();\n    this.state = {\n      toggleCountryFlag: false,\n      center: [100, 100],\n      // center of the map, we should set it as a country's location\n      countryName: '',\n      date: ''\n    };\n    this.onEachCountry = this.onEachCountry.bind(this);\n    this.onCountryMouseover = this.onCountryMouseover.bind(this);\n  }\n\n  onEachCountry(country, layer) {\n    const countryName = country.properties.ADMIN;\n    layer.bindPopup(countryName);\n    layer.on({\n      click: this.onCountryMouseover\n    });\n  }\n\n  onCountryMouseover(event) {\n    event.target.setStyle({\n      color: 'green',\n      fillColor: 'yellow'\n    });\n  }\n\n  render() {\n    var position = [100, 100];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"covid19_world_map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(MapContainer, {\n      style: {\n        height: \"100vh\"\n      },\n      zoom: 3,\n      center: this.state.center,\n      scrollWheelZoom: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.countryName,\n      placeholder: \"Country name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.date,\n      placeholder: \"Date, e.g. 9/30/20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(GeoJSON, {\n      data: GeojsonData.features,\n      style: () => ({\n        color: '#4a83ec',\n        weight: 0.5,\n        fillColor: \"#1a1d62\",\n        fillOpacity: 1\n      }),\n      onEachFeature: this.onEachCountry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/yangyuchen/Desktop/CIS550 Project/CIS550_Project/frontend/client/src/components/COVID19_world_map.js"],"names":["React","Component","PageNavbar","MapContainer","GeoJSON","Popup","Marker","TileLayer","GeojsonData","COVID19_world_map","constructor","state","toggleCountryFlag","center","countryName","date","onEachCountry","bind","onCountryMouseover","country","layer","properties","ADMIN","bindPopup","on","click","event","target","setStyle","color","fillColor","render","position","height","features","weight","fillOpacity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,YAAR,EAAsBC,OAAtB,EAA+BC,KAA/B,EAAsCC,MAAtC,EAA8CC,SAA9C,QAA8D,eAA9D;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAO,0BAAP;AACA,eAAe,MAAMC,iBAAN,SAAgCR,SAAhC,CAA0C;AACrDS,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,iBAAiB,EAAG,KADX;AAETC,MAAAA,MAAM,EAAG,CAAC,GAAD,EAAM,GAAN,CAFA;AAEY;AACrBC,MAAAA,WAAW,EAAE,EAHJ;AAITC,MAAAA,IAAI,EAAE;AAJG,KAAb;AAMA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACH;;AAEDD,EAAAA,aAAa,CAACG,OAAD,EAAUC,KAAV,EAAgB;AACzB,UAAMN,WAAW,GAAGK,OAAO,CAACE,UAAR,CAAmBC,KAAvC;AACAF,IAAAA,KAAK,CAACG,SAAN,CAAgBT,WAAhB;AACAM,IAAAA,KAAK,CAACI,EAAN,CAAS;AACLC,MAAAA,KAAK,EAAE,KAAKP;AADP,KAAT;AAGH;;AAEDA,EAAAA,kBAAkB,CAACQ,KAAD,EAAQ;AACtBA,IAAAA,KAAK,CAACC,MAAN,CAAaC,QAAb,CAAsB;AAClBC,MAAAA,KAAK,EAAC,OADY;AAElBC,MAAAA,SAAS,EAAE;AAFO,KAAtB;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,QAAQ,GAAG,CAAC,GAAD,EAAM,GAAN,CAAf;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAC,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAArB;AAAuC,MAAA,IAAI,EAAE,CAA7C;AAAgD,MAAA,MAAM,EAAE,KAAKtB,KAAL,CAAWE,MAAnE;AAA2E,MAAA,eAAe,EAAE,KAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,WAArC;AAAkD,MAAA,WAAW,EAAC,cAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,IAArC;AAA2C,MAAA,WAAW,EAAC,oBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,CADJ,eAMI,oBAAC,OAAD;AACI,MAAA,IAAI,EAAEP,WAAW,CAAC0B,QADtB;AAEI,MAAA,KAAK,EAAE,OAAO;AACdL,QAAAA,KAAK,EAAE,SADO;AAEdM,QAAAA,MAAM,EAAE,GAFM;AAGdL,QAAAA,SAAS,EAAE,SAHG;AAIdM,QAAAA,WAAW,EAAE;AAJC,OAAP,CAFX;AAQI,MAAA,aAAa,EAAI,KAAKpB,aAR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAHJ,CADJ;AAwBH;;AAtDoD","sourcesContent":["import React, { Component } from 'react'\nimport PageNavbar from \"./PageNavbar\";\nimport {MapContainer, GeoJSON, Popup, Marker, TileLayer} from 'react-leaflet'\nimport GeojsonData from './../countries.json'\nimport 'leaflet/dist/leaflet.css'\nexport default class COVID19_world_map extends Component {\n    constructor(){\n        super()\n        this.state = {\n            toggleCountryFlag : false,\n            center : [100, 100], // center of the map, we should set it as a country's location\n            countryName: '',\n            date: '',\n        }\n        this.onEachCountry = this.onEachCountry.bind(this)\n        this.onCountryMouseover = this.onCountryMouseover.bind(this)\n    }\n\n    onEachCountry(country, layer){\n        const countryName = country.properties.ADMIN\n        layer.bindPopup(countryName)\n        layer.on({\n            click: this.onCountryMouseover\n        })\n    }\n\n    onCountryMouseover(event) {\n        event.target.setStyle({\n            color:'green',\n            fillColor: 'yellow'\n        })\n    }\n\n    render() {\n        var position = [100, 100]\n        return ( \n            <div> \n                <PageNavbar active='covid19_world_map'/>\n                          \n                <MapContainer style={{height:\"100vh\"}} zoom={3} center={this.state.center} scrollWheelZoom={false}>\n                    <div>\n                    <input type='text' value={this.state.countryName} placeholder=\"Country name\"></input>\n                    <input type='text' value={this.state.date} placeholder=\"Date, e.g. 9/30/20\"></input>\n                    <button>Search</button>\n                </div>  \n                    <GeoJSON \n                        data={GeojsonData.features}\n                        style={() => ({\n                        color: '#4a83ec',\n                        weight: 0.5,\n                        fillColor: \"#1a1d62\",\n                        fillOpacity: 1,\n                        })}\n                        onEachFeature = {this.onEachCountry}\n                    />\n                    \n                </MapContainer>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}